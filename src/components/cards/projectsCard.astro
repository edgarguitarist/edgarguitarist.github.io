---
import ButtonLanguages from "@components/buttons/ButtonLanguages.astro";
import ButtonProjectsCard from "@components/buttons/ButtonProjectsCard.astro";
import { t } from "i18next";
import Icon from "astro-icon";

interface Props {
  name: string;
  repo_url: string;
  site: string | null;
  description: string | null;
  contributor: Contributor;
  languages: Languages;
  stars: number;
}

const { name, repo_url, site, description, contributor, languages, stars } =
  Astro.props;

const no_show = ["Hack", "PowerShell", "Tcl", "Batchfile", "Shell"];

const lenguajes = Object.keys(languages)
  .filter((key) => !no_show.includes(key))
  .sort();

const lenguajes_string = lenguajes.join(", ") + ".";
---

<article
  class="p-3 lg:w-[31%] md:w-[45%] w-[96%] border-gradient hover:scale-105 relative font-semibold"
>
  <header>
    <a href={repo_url} title={name} target="_blank">
      <h2
        class="py-3 mx-auto w-[90%] dark:text-white text-2xl overflow-hidden text-ellipsis whitespace-nowrap hover:text-[#743ad5] dark:hover:text-[#d53a9d]"
      >
        {name}
      </h2>
    </a>
  </header>
  <div class="content h-20">
    <p
      title={description}
      class="text-md text-gray-700 dark:text-gray-400 overflow-hidden text-ellipsis whitespace-nowrap"
    >
      {description || "..."}
    </p>
    <p
      title={`${t("index.projects.cards.languages")}: ${lenguajes_string}`}
      class="text-slate-800 dark:text-gray-400 overflow-hidden text-ellipsis whitespace-nowrap flex items-center justify-center gap-2 pt-2"
    >
      {t("index.projects.cards.languages")}: {
        lenguajes.map((lenguaje) => <ButtonLanguages language={lenguaje} />)
      }
    </p>
  </div>
  <footer>
    <div class="flex place-content-center gap-8 center w-[80%] mx-auto">
      <ButtonProjectsCard
        name="GitHub"
        icon_name="mdi:github"
        site={repo_url}
      />
      {
        site && (
          <ButtonProjectsCard
            name="Site"
            icon_name="ic:baseline-language"
            site={site}
          />
        )
      }
    </div>
  </footer>
  {
    Boolean(stars) && !contributor && (
      <div
        id={`${"badge-stars"}-${name}`}
        title={`${stars} ${t("index.projects.cards.stars")}`}
        class="absolute inline-flex items-center justify-center w-10 h-10 font-semibold bg-transparent rounded-full -top-[1.1rem] -right-4 text-md"
      >
        <Icon name="mdi:star" class="flex absolute z-[1] text-yellow-300"></Icon>
        <span class="text-gray-900 z-[2]">{stars}</span>
      </div>
    )
  }
  {
    contributor && (
      <div
        id={`${"badge-contributions"}-${name}`}
        title={`${contributor.contributions} ${t(
          "index.projects.cards.contribution"
        )}`}
        class="absolute inline-flex items-center justify-center w-8 h-8 font-bold bg-red-600 border-2 border-white rounded-full -top-2 -right-2 dark:border-gray-900 text-md"
      >
        <span class="text-white">{contributor.contributions}</span>
      </div>
    )
  }
</article>
